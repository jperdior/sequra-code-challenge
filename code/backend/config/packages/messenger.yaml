framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            failed: '%env(RABBITMQ_URL)%'
            # sync: 'sync://'
            async:
                dsn: '%env(RABBITMQ_URL)%'
            purchase_created:
                dsn: '%env(RABBITMQ_URL)%'
                options:
                    exchange:
                        name: purchase_created
                        type: direct
                        arguments: { }
                    queues:
                        disbursement.find_or_create_on_purchase_created:
#                            binding_arguments:
#                                purchase_created.queue1: purchase_created.queue1
#                                purchase_created.queue2: purchase_created.queue2
#                            binding_keys:
#                                - purchase_created.queue1
#                                - purchase_created.queue2
                            arguments: { }
                        #purchase_created_queue2:
                        #    name: purchase_created_queue2
                        #    durable: true
                        #    auto_delete: false
                        #    arguments: { }
                        #    binding:
                        #        routing_key: purchase_created.queue2
            disbursement_line_created:
                dsn: '%env(RABBITMQ_URL)%'
                options:
                    exchange:
                        name: disbursement_line_created
                        type: direct
                        arguments: { }
                    queues:
                        disbursement.update_amount_and_fee_on_disbursement_line_created:
                            arguments: { }

        routing:
            # Route your messages to the transports
            # 'App\Message\YourMessage': async
            #'App\Shared\Domain\Bus\Event\DomainEvent': async
            'App\SequraChallenge\Purchases\Domain\DomainEvents\PurchaseCreatedDomainEvent': purchase_created
            'App\SequraChallenge\DisbursementLines\Domain\DomainEvents\DisbursementLineCreatedDomainEvent': disbursement_line_created
            'App\Shared\Domain\Bus\Command\Command': async

when@test:
    framework:
        messenger:
            transports:
                # replace with your transport name here (e.g., my_transport: 'in-memory://')
                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'
                sync: 'sync://'

            routing:
                # Route your messages to the transports
                # 'App\Message\YourMessage': async
                'App\SequraChallenge\Purchases\Domain\DomainEvents\PurchaseCreatedDomainEvent': sync
                'App\SequraChallenge\DisbursementLines\Domain\DomainEvents\DisbursementLineCreatedDomainEvent': sync
                'App\Shared\Domain\Bus\Command\Command': sync
